volumes:
  data:

services:
  #Api  Service
  productorderapi:
    image: ${DOCKER_REGISTRY-}productorderapi
    build:
      context: ProductOrderApi
      dockerfile: Dockerfile
    container_name: ProductOrderApi
    ports:
      - "8080:8080"
    environment:
      - ConnectionStrings__DefaultConnection=Server=mysqldb; Port=3306; Database=ProductOrderDB; Uid=apiadmin; Pwd=pass@word1234;
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Queue=OrderStatusUpdate
    depends_on:
      - mysqldb
      - rabbitmq

  #DataBase Service
  mysqldb:
    image: mysql:8.0
    ports:
      - "3306:3306"
    volumes:
      - data:/var/lib/mysql
    restart: always
    environment: 
      MYSQL_ROOT_PASSWORD: Root0++
      MYSQL_USER: apiadmin
      MYSQL_PASSWORD: pass@word1234
      MYSQL_DATABASE: ProductOrderDB

  logconsole:
    build:
      context: LogConsole
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      RabbitMq__Host: rabbitmq
      RabbitMq__Queue: OrderStatusUpdate

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest